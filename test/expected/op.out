set client_min_messages to 'error';
drop extension if exists "parray_gin" cascade;
create extension "parray_gin";
set client_min_messages to 'warning';
\t on
\pset format unaligned
-- t
select (array['foo', 'bar', 'baz']) @> array['foo'];
t
-- t
select (array['foo', 'bar', 'baz']) @> array['foo', 'bar'];
t
-- t
select (array['foo', 'bar', 'baz']) @> array['baz', 'foo'];
t
-- f
select (array['foo', 'bar', 'baz']) @> array['qux'];
f
-- t
select (array['foo', 'bar', 'baz']) @> array[]::text[];
t
-- t
select (array[]::text[]) @> array[]::text[];
t
-- f
select (array[]::text[]) @> array['qux'];
f
-- t
select (array['foo', 'bar', 'baz']) @@> array['foo'];
t
-- t
select (array['foo', 'bar', 'baz']) @@> array['foo', 'bar'];
t
-- t
select (array['foo', 'bar', 'baz']) @@> array['baz', 'foo'];
t
-- f
select (array['foo', 'bar', 'baz']) @@> array['qux'];
f
-- t
select (array['foo', 'bar', 'baz']) @@> array[]::text[];
t
-- t
select (array[]::text[]) @> array[]::text[];
t
-- f
select (array[]::text[]) @> array['qux'];
f
-- t
select (array['foo', 'bar', 'baz']) @@> array['fo%'];
t
-- t
select (array['foo', 'bar', 'baz']) @@> array['ba%'];
t
-- t
select (array['foo', 'bar', 'baz']) @@> array['b%'];
t
-- t
select (array['foo', 'bar', 'baz']) @@> array['%'];
t
-- f
select (array['foo', 'bar', 'baz']) @@> array['baq'];
f
-- t
select (array['foo', 'foobar', 'baz']) @@> array['foo%'];
t
-- t
select (array['foo', 'boo', 'baz']) @@> array['%oo%'];
t
-- t
select (array['foo', 'boo', 'baz']) @@> array['ba%', 'fo%'];
t
-- f
select (array['foo', 'boo', 'baz']) @@> array['%ooz%'];
f
-- t
select (array['food', 'booze', 'baz']) @@> array['%ooz%'];
t
\t off
\pset format aligned
